/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventarisbarang;
import javax.swing.JOptionPane;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author samsung
 */
public class TambahStokBarang extends javax.swing.JFrame {

    /**
     * Creates new form BarangKeluar
     */
    public TambahStokBarang() {
        initComponents();
        
        createTableListStokBarang();
            showTableListBarang();

            cbNamaBarang.addItem("Pilih Barang");
            String SQLBarang = "SELECT * FROM barang";
            ResultSet rsBarang = koneksi.executeQuery(SQLBarang);
            try {
                while (rsBarang.next()){
                    String namaBarang = rsBarang.getString("nama_barang");
    //                String stokBarang = rsBarang.getString("stok_barang");
                    cbNamaBarang.addItem(namaBarang);
                }
            }catch (SQLException ex){
                Logger.getLogger(BarangMasuk.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        public void refresh(){
            this.dispose();
            new TambahStokBarang().setVisible(true);
        }

        public void createTableListStokBarang(){
            String SQLCheckTable = "SHOW TABLES LIKE 'list_stok_barang'";
            ResultSet rsCheckTable = koneksi.executeQuery(SQLCheckTable);
            try {
                if(!rsCheckTable.next()){
                    String SQLCreateTableListBarang = "CREATE TABLE list_stok_barang (no INT PRIMARY KEY, jumlah INT)";
                    koneksi.execute(SQLCreateTableListBarang);
                }
            }catch(SQLException ex){
                Logger.getLogger(BarangMasuk.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        public void showTableListBarang(){
            String kolom[] = {"NO", "Nama", "Kategori", "Tambah Stok", "Stok Awal", "Stok Akhir"};
            DefaultTableModel dtm = new DefaultTableModel(null, kolom);
            String SQL = "SELECT * FROM list_stok_barang";
            ResultSet rs = koneksi.executeQuery(SQL);

            try {
                while (rs.next()){
                    String no = rs.getString("no");
                    int jumlahTambahStok = rs.getInt("jumlah");
                    String nama = "";
                    String kategoriId = "";
                    int stokAwal = 0;
                
                if (!"".equals(no)){
                    String SQLTableBarang = "SELECT * FROM barang WHERE id_barang="+no;
                    ResultSet rsTableBarang = koneksi.executeQuery(SQLTableBarang);
                    try {
                        if (rsTableBarang.next()){
                            nama = rsTableBarang.getString("nama_barang");
                            kategoriId = rsTableBarang.getString("kategori_id");
                            stokAwal = rsTableBarang.getInt("stok_barang");
                        }
                    }catch (SQLException ex){
                        Logger.getLogger(BarangMasuk.class.getName()).log(Level.SEVERE, null, ex);
                    }   
                }
                
                String kategori = "";
                if (!"".equals(kategoriId)){
                    String SQLKategori = "SELECT nama_kategori FROM kategori WHERE id_kategori="+kategoriId;
                    ResultSet rsKategori = koneksi.executeQuery(SQLKategori);
                    if (rsKategori.next()){
                        kategori = rsKategori.getString("nama_kategori");
                    }
                }
                
                int total_stok_akhir = stokAwal + jumlahTambahStok; 
                Object data[] = {no, nama,  kategori, jumlahTambahStok, stokAwal, total_stok_akhir};
                dtm.addRow(data);
            }
        }catch (SQLException ex){
            Logger.getLogger(BarangMasuk.class.getName()).log(Level.SEVERE, null, ex);
        }
        tbListBarang.setModel(dtm);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNamaCustomer = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtNoTelpCustomer = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaAlamat = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        txtJumlahBarang = new javax.swing.JTextField();
        btnAddList = new javax.swing.JButton();
        cbNamaBarang = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbListBarang = new javax.swing.JTable();
        btnDeleteList = new javax.swing.JButton();
        btnTambahStokBarang = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setBackground(new java.awt.Color(214, 234, 207));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(720, 518));

        jPanel1.setBackground(new java.awt.Color(214, 234, 207));
        jPanel1.setPreferredSize(new java.awt.Dimension(720, 600));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel1.setText("Tambah Stok Barang");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 20));

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel10.setText("Nama Customer :");

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel11.setText("No. Telp Customer :");

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel12.setText("Alamat Customer :");

        txtNamaCustomer.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        txtNamaCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaCustomerActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel14.setText("Nama Customer :");

        txtNoTelpCustomer.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        txtNoTelpCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoTelpCustomerActionPerformed(evt);
            }
        });

        txtaAlamat.setColumns(20);
        txtaAlamat.setRows(5);
        txtaAlamat.setPreferredSize(new java.awt.Dimension(64, 84));
        jScrollPane2.setViewportView(txtaAlamat);

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel15.setText("Jumlah Barang :");

        txtJumlahBarang.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        txtJumlahBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJumlahBarangActionPerformed(evt);
            }
        });

        btnAddList.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAddList.setText("Tambahkan Ke List");
        btnAddList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddListActionPerformed(evt);
            }
        });

        cbNamaBarang.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        tbListBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tbListBarang);

        btnDeleteList.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnDeleteList.setText("Delete List Barang");
        btnDeleteList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteListActionPerformed(evt);
            }
        });

        btnTambahStokBarang.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnTambahStokBarang.setText("Tambahkan Stok Barang");
        btnTambahStokBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahStokBarangActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNamaCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoTelpCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbNamaBarang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(txtJumlahBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(btnAddList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDeleteList))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTambahStokBarang)))
                        .addContainerGap(76, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel10))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNamaCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel15))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoTelpCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJumlahBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddList)
                    .addComponent(jLabel12))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDeleteList)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambahStokBarang)
                    .addComponent(btnCancel))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaCustomerActionPerformed

    private void txtNoTelpCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoTelpCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoTelpCustomerActionPerformed

    private void txtJumlahBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJumlahBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJumlahBarangActionPerformed

    private void btnAddListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddListActionPerformed
        if ("".equals(txtJumlahBarang.getText())){
            JOptionPane.showMessageDialog(this, "Harap lengkapi Form Barang", "Error", JOptionPane.WARNING_MESSAGE);
        }else {
            String SQLSelectBarang = "SELECT * FROM barang WHERE nama_barang='"+cbNamaBarang.getSelectedItem()+"'";
            ResultSet rsSelectBarang = koneksi.executeQuery(SQLSelectBarang);
            String id_barang = "";
            try {
                if (rsSelectBarang.next()){
                    id_barang = rsSelectBarang.getString("id_barang");
                }
            }catch (SQLException ex){
                Logger.getLogger(BarangMasuk.class.getName()).log(Level.SEVERE, null, ex);
            }           
            
            String SQLInsertTableListBarang = "INSERT INTO list_stok_barang (no, jumlah) VALUES ("+id_barang+", "+txtJumlahBarang.getText()+")";            
            int status = koneksi.execute(SQLInsertTableListBarang);
                if (status == 1){
                    JOptionPane.showMessageDialog(this, "Berhasil Menambahkan Barang pada list", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                }else {
                    JOptionPane.showMessageDialog(this, "Gagal Menambahkan Barang pada list", "Errpr", JOptionPane.WARNING_MESSAGE);
                }
            refresh();
        }
    }//GEN-LAST:event_btnAddListActionPerformed

    private void btnTambahStokBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahStokBarangActionPerformed
        if ("".equals(txtNamaCustomer.getText()) || "".equals(txtNoTelpCustomer.getText()) || "".equals(txtaAlamat.getText())){
            JOptionPane.showMessageDialog(this, "Harap lengkapi Form Barang", "Error", JOptionPane.WARNING_MESSAGE);
        }else {
            String checkTable = "SELECT * FROM list_stok_barang";
            ResultSet rs = koneksi.executeQuery(checkTable);
            try {
                if (!rs.next()){
                    JOptionPane.showMessageDialog(this, "List Barang Kosong", "Error", JOptionPane.ERROR_MESSAGE);
                }else {
                    String SQLInsertCustomer = "INSERT INTO customers (nama_Customer, alamat_Customer, no_Telp_Customer) VALUES ('"+txtNamaCustomer.getText()+"', '"+txtaAlamat.getText()+"', '"+txtNoTelpCustomer.getText()+"')";
                    Statement stmInsertCustomer = koneksi.setKoneksi().createStatement();
                    stmInsertCustomer.executeUpdate(SQLInsertCustomer, Statement.RETURN_GENERATED_KEYS);
                    int lastIdCustomer = 0;
                    try (ResultSet rsLastIdCustomer = stmInsertCustomer.getGeneratedKeys()){
                        if (rsLastIdCustomer.next()){
                            lastIdCustomer = rsLastIdCustomer.getInt(1);
                        }
                    }
                    
                    String SQLinsertCatatan = "INSERT INTO pencatatan_barang (jenis_catatan, tanggal, customer_id) VALUES ('masuk', NOW(), "+lastIdCustomer+")";
                    Statement stmInsertCatatan = koneksi.setKoneksi().createStatement();
                    stmInsertCatatan.executeUpdate(SQLinsertCatatan, Statement.RETURN_GENERATED_KEYS);
                    int lastIdCatatan = 0;
                    try (ResultSet rsLastIdCatatan = stmInsertCatatan.getGeneratedKeys()){
                        if (rsLastIdCatatan.next()){
                            lastIdCatatan = rsLastIdCatatan.getInt(1);
                        }
                    }
                    
                    ResultSet rsListBarangKeluar = koneksi.executeQuery(checkTable);
                    try {
                        while (rsListBarangKeluar.next()){
                            String id_barang = rsListBarangKeluar.getString("no");
                            int jumlah = rsListBarangKeluar.getInt("jumlah");                            
                            
                            String SQLSelectBarang = "SELECT * FROM barang WHERE id_barang="+id_barang;
                            ResultSet rsTableBarang = koneksi.executeQuery(SQLSelectBarang);
                            int stok_barang = 0;
                            try {
                                if (rsTableBarang.next()){
                                    stok_barang = rsTableBarang.getInt("stok_barang");
                                }
                            }catch (SQLException ex){
                                Logger.getLogger(BarangMasuk.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            
                            String SQLInsertDetailPencatatan = "INSERT INTO detail_pencatatan_barang (Catatan_id, Barang_id, jumlah_barang) VALUES ("+lastIdCatatan+", "+id_barang+", "+jumlah+")";
                            koneksi.execute(SQLInsertDetailPencatatan);
                            
                            int stok_akhir = stok_barang + jumlah ;
                            String SQLUpdateStokBarang = "UPDATE barang SET stok_barang = "+stok_akhir+" WHERE id_barang ="+id_barang;
                            koneksi.execute(SQLUpdateStokBarang);
                        }
                    }catch (SQLException ex){
                        Logger.getLogger(BarangMasuk.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }catch (SQLException ex){
                Logger.getLogger(BarangMasuk.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Berhasil", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            String SQLTruncate = "TRUNCATE TABLE list_stok_barang";
            koneksi.execute(SQLTruncate);
            
            this.dispose();
            new indexFrm().setVisible(true);
        }
    }//GEN-LAST:event_btnTambahStokBarangActionPerformed

    private void btnDeleteListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteListActionPerformed
        int row = tbListBarang.getSelectedRow();
        if (row >= 0){
            String no = tbListBarang.getValueAt(row, 0).toString();
            String SQL = "DELETE FROM list_stok_barang WHERE no="+no;
            int status = koneksi.execute(SQL);
            if (status == 1){
                JOptionPane.showMessageDialog(this, "List Barang Berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            }else {
                JOptionPane.showMessageDialog(this, "List Barang Gagal dihapus", "Gagal", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Pilih baris terlebih dahulu", "Gagal", JOptionPane.INFORMATION_MESSAGE);
        }
        refresh();
    }//GEN-LAST:event_btnDeleteListActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
        new indexFrm().setVisible(true);
        
        String SQL = "TRUNCATE TABLE list_stok_barang";
        koneksi.execute(SQL);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TambahStokBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TambahStokBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TambahStokBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TambahStokBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TambahStokBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddList;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeleteList;
    private javax.swing.JButton btnTambahStokBarang;
    private javax.swing.JComboBox<String> cbNamaBarang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbListBarang;
    private javax.swing.JTextField txtJumlahBarang;
    private javax.swing.JTextField txtNamaCustomer;
    private javax.swing.JTextField txtNoTelpCustomer;
    private javax.swing.JTextArea txtaAlamat;
    // End of variables declaration//GEN-END:variables
}
